<?xml version="1.0" encoding="UTF-8"?>

<project name="PdfWordCount" default="jar" basedir="."  >
	<property environment="env"  />
	<property name="src" value="${basedir}/src" />
	<property name="builddest" value="${basedir}/build/classes" />
	<property name="bin"  value="${basedir}/bin" />
	<property name="hadoop.home" value="${env.HADOOP_HOME}" />
	<property name="spark.home" value="${env.SPARK_HOME}"  />
	<property name="scala.lib" value="/usr/share/java" />
	<path id="lib.path.id">
		<fileset dir="${basedir}/lib" />
		<fileset dir="${hadoop.home}/share/hadoop/" />
		<fileset dir="${spark.home}/lib" />
	</path>
	
	
	<target name="clean" >
		<delete dir="${basedir}/build"></delete>
		<delete file="${basedir}/PdfWordCount.jar"></delete>
	</target>
	
	
	<target name="init" depends="clean">
		<mkdir dir="${basedir}/build/classes" />
		<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath>
			<pathelement location="${scala.lib}/scala-compiler.jar"   />
			<pathelement location="${scala.lib}/scala-library.jar"   />
			<pathelement location="${scala.lib}/scala-reflect.jar"   />
		</classpath>
		</taskdef>
	</target>
	
	<target name="compile" depends="init">
		<javac  includeantruntime="false"  srcdir="${src}"  destdir="${builddest}" classpathref="lib.path.id" /> 
		<scalac srcdir="${src}/scala"  destdir="${builddest}" classpathref="lib.path.id" >
			<classpath>
				<pathelement path="${basedir}/build/classes"/>  
			</classpath>
		</scalac>
	</target>

	<pathconvert property="mf.classpath" pathsep=" ">
		<mapper>
			<chainedmapper>  
				<flattenmapper/>  
				<globmapper from="*" to="lib/*"/>  
			</chainedmapper>  
		</mapper>  
		<path refid="lib.path.id"/>  
	</pathconvert> 
	
	<target name="jar" depends="compile" >
		<jar destfile="${basedir}/PdfWordCount.jar" basedir="${builddest}/" >
			<manifest>
				<attribute name="Built-By" value="${env.USER}"/>
				<attribute name="Build-Version" value="1" />
				<attribute name="Class-Path" value="${mf.classpath}"/>
			</manifest>
	  	</jar>
	</target>

</project>